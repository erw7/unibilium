#ifndef GUARD_UNINETBSD_CURSES_H_
#define GUARD_UNINETBSD_CURSES_H_

/*

Copyright 2008, 2010-2013, 2015 Lukas Mai.

This file is part of unibilium.

Unibilium is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Unibilium is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with unibilium.  If not, see <http://www.gnu.org/licenses/>.

*/

#include"unibilium.h"

static const unsigned short nc_bools2nbc[] = {
      0, // bw
      1, // am
     28, // bce
     27, // ccc
      3, // xhp
     30, // xhpa
     35, // cpix
     31, // crxm
     17, // xt
      4, // xenl
      5, // eo
      6, // gn
      7, // hc
     23, // chts
      8, // km
     32, // daisy
      9, // hs
     29, // hls
     10, // in
     36, // lpix
     11, // da
     12, // db
     13, // mir
     14, // msgr
     21, // nxon
      2, // xsb
     25, // npc
     26, // ndscr
     24, // nrrmc
     15, // os
     22, // mc5i
     33, // xvpa
     34, // sam
     16, // eslok
     18, // hz
     19, // ul
     20, // xon
};

static const unsigned short nc_nums2nbc[] = {
     31, // bitwin
     32, // bitype
     16, // bufsz
     30, // btns
      0, // cols
     18, // spinh
     17, // spinv
      1, // it
      9, // lh
     10, // lw
      2, // lines
      3, // lm
     11, // ma
      4, // xmc
     13, // colors
     19, // maddr
     20, // mjump
     14, // pairs
     12, // wnum
     21, // mcs
     22, // mls
     15, // ncv
      8, // nlab
     23, // npins
     24, // orc
     25, // orl
     26, // orhi
     27, // orvi
      5, // pb
     28, // cps
      6, // vt
     29, // widcs
      7, // wsl
};

static const unsigned short nc_strs2nbc[] = {
    146, // acsc
    385, // scesa
      0, // cbt
      1, // bel
    372, // bicr
    371, // binel
    370, // birep
      2, // cr
    304, // cpi
    305, // lpi
    306, // chr
    307, // cvr
      3, // csr
    145, // rmp
    354, // csnm
      4, // tbc
    270, // mgc
      5, // clear
    269, // el1
      6, // el
      7, // ed
    363, // csin
    373, // colornm
      8, // hpa
      9, // cmdch
    277, // cwin
     10, // cup
     11, // cud1
     12, // home
     13, // civis
     14, // cub1
     15, // mrcup
     16, // cnorm
     17, // cuf1
     18, // ll
     19, // cuu1
     20, // cvvis
    374, // defbi
    308, // defc
     21, // dch1
     22, // dl1
    362, // devt
    280, // dial
     23, // dsl
    275, // dclk
    378, // dispc
     24, // hd
    155, // enacs
    375, // endbi
     25, // smacs
    151, // smam
     26, // blink
     27, // bold
     28, // smcup
     29, // smdc
     30, // dim
    309, // swidm
    310, // sdrfq
    386, // ehhlm
     31, // smir
    311, // sitm
    387, // elhlm
    312, // slm
    388, // elohlm
    313, // smicm
    314, // snlq
    315, // snrmq
    379, // smpch
     33, // prot
     34, // rev
    389, // erhlm
    381, // smsc
     32, // invis
    316, // sshm
     35, // smso
    317, // ssubm
    318, // ssupm
    390, // ethlm
     36, // smul
    319, // sum
    391, // evhlm
    149, // smxon
     37, // ech
     38, // rmacs
    152, // rmam
     39, // sgr0
     40, // rmcup
     41, // rmdc
    320, // rwidm
     42, // rmir
    321, // ritm
    322, // rlm
    323, // rmicm
    380, // rmpch
    382, // rmsc
    324, // rshm
     43, // rmso
    325, // rsubm
    326, // rsupm
     44, // rmul
    327, // rum
    150, // rmxon
    285, // pause
    284, // hook
     45, // flash
     46, // ff
     47, // fsl
    358, // getm
    278, // wingo
    279, // hup
     48, // is1
     49, // is2
     50, // is3
     51, // if
    138, // iprog
    299, // initc
    300, // initp
     52, // ich1
     53, // il1
     54, // ip
    139, // ka1
    140, // ka3
    141, // kb2
     55, // kbs
    158, // kbeg
    148, // kcbt
    142, // kc1
    143, // kc3
    159, // kcan
     56, // ktbc
     57, // kclr
    160, // kclo
    161, // kcmd
    162, // kcpy
    163, // kcrt
     58, // kctab
     59, // kdch1
     60, // kdl1
     61, // kcud1
     62, // krmir
    164, // kend
    165, // kent
     63, // kel
     64, // ked
    166, // kext
     65, // kf0
     66, // kf1
     68, // kf2
     69, // kf3
     70, // kf4
     71, // kf5
     72, // kf6
     73, // kf7
     74, // kf8
     75, // kf9
     67, // kf10
    216, // kf11
    217, // kf12
    218, // kf13
    219, // kf14
    220, // kf15
    221, // kf16
    222, // kf17
    223, // kf18
    224, // kf19
    225, // kf20
    226, // kf21
    227, // kf22
    228, // kf23
    229, // kf24
    230, // kf25
    231, // kf26
    232, // kf27
    233, // kf28
    234, // kf29
    235, // kf30
    236, // kf31
    237, // kf32
    238, // kf33
    239, // kf34
    240, // kf35
    241, // kf36
    242, // kf37
    243, // kf38
    244, // kf39
    245, // kf40
    246, // kf41
    247, // kf42
    248, // kf43
    249, // kf44
    250, // kf45
    251, // kf46
    252, // kf47
    253, // kf48
    254, // kf49
    255, // kf50
    256, // kf51
    257, // kf52
    258, // kf53
    259, // kf54
    260, // kf55
    261, // kf56
    262, // kf57
    263, // kf58
    264, // kf59
    265, // kf60
    266, // kf61
    267, // kf62
    268, // kf63
    167, // kfnd
    168, // khlp
     76, // khome
     77, // kich1
     78, // kil1
     79, // kcub1
     80, // kll
    169, // kmrk
    170, // kmsg
    355, // kmous
    171, // kmov
    172, // knxt
     81, // knp
    173, // kopn
    174, // kopt
     82, // kpp
    175, // kprv
    176, // kprt
    177, // krdo
    178, // kref
    179, // krfr
    180, // krpl
    181, // krst
    182, // kres
     83, // kcuf1
    183, // ksav
    186, // kBEG
    187, // kCAN
    188, // kCMD
    189, // kCPY
    190, // kCRT
    191, // kDC
    192, // kDL
    193, // kslt
    194, // kEND
    195, // kEOL
    196, // kEXT
     84, // kind
    197, // kFND
    198, // kHLP
    199, // kHOM
    200, // kIC
    201, // kLFT
    202, // kMSG
    203, // kMOV
    204, // kNXT
    205, // kOPT
    206, // kPRV
    207, // kPRT
     85, // kri
    208, // kRDO
    209, // kRPL
    210, // kRIT
    211, // kRES
    212, // kSAV
    213, // kSPD
     86, // khts
    214, // kUND
    184, // kspd
    185, // kund
     87, // kcuu1
     88, // rmkx
     89, // smkx
     90, // lf0
     91, // lf1
     93, // lf2
     94, // lf3
     95, // lf4
     96, // lf5
     97, // lf6
     98, // lf7
     99, // lf8
    100, // lf9
     92, // lf10
    273, // fln
    157, // rmln
    156, // smln
    101, // rmm
    102, // smm
    328, // mhpa
    329, // mcud1
    330, // mcub1
    331, // mcuf1
    332, // mvpa
    333, // mcuu1
    356, // minfo
    103, // nel
    334, // porder
    298, // oc
    297, // op
    104, // pad
    105, // dch
    106, // dl
    107, // cud
    335, // mcud
    108, // ich
    109, // indn
    110, // il
    111, // cub
    336, // mcub
    112, // cuf
    337, // mcuf
    113, // rin
    114, // cuu
    338, // mcuu
    383, // pctrm
    115, // pfkey
    116, // pfloc
    361, // pfxl
    117, // pfx
    147, // pln
    118, // mc0
    144, // mc5p
    119, // mc4
    120, // mc5
    283, // pulse
    281, // qdial
    276, // rmclk
    121, // rep
    215, // rfi
    357, // reqmp
    122, // rs1
    123, // rs2
    124, // rs3
    125, // rf
    126, // rc
    127, // vpa
    128, // sc
    384, // scesc
    129, // ind
    130, // ri
    339, // scs
    364, // s0ds
    365, // s1ds
    366, // s2ds
    367, // s3ds
    392, // sgr1
    360, // setab
    359, // setaf
    131, // sgr
    303, // setb
    340, // smgb
    341, // smgbp
    274, // sclk
    376, // setcolor
    301, // scp
    302, // setf
    271, // smgl
    342, // smglp
    368, // smglr
    377, // slines
    393, // slength
    272, // smgr
    343, // smgrp
    132, // hts
    369, // smgtb
    344, // smgt
    345, // smgtp
    133, // wind
    346, // sbim
    347, // scsd
    348, // rbim
    349, // rcsd
    350, // subcs
    351, // supcs
    134, // ht
    352, // docr
    135, // tsl
    282, // tone
    287, // u0
    288, // u1
    289, // u2
    290, // u3
    291, // u4
    292, // u5
    293, // u6
    294, // u7
    295, // u8
    296, // u9
    136, // uc
    137, // hu
    286, // wait
    154, // xoffc
    153, // xonc
    353, // zerom
};

static const short nbc_bools2nc[] = {
      0, // bw
      1, // am
     25, // xsb
      4, // xhp
      9, // xenl
     10, // eo
     11, // gn
     12, // hc
     14, // km
     16, // hs
     18, // in
     20, // da
     21, // db
     22, // mir
     23, // msgr
     29, // os
     33, // eslok
      8, // xt
     34, // hz
     35, // ul
     36, // xon
     24, // nxon
     30, // mc5i
     13, // chts
     28, // nrrmc
     26, // npc
     27, // ndscr
      3, // ccc
      2, // bce
     17, // hls
      5, // xhpa
      7, // crxm
     15, // daisy
     31, // xvpa
     32, // sam
      6, // cpix
     19, // lpix
     -1, // OTbs
     -1, // OTns
     -1, // OTnc
     -1, // OTMT
     -1, // OTNL
     -1, // OTpt
     -1, // OTxr
};

static const short nbc_nums2nc[] = {
      4, // cols
      7, // it
     10, // lines
     11, // lm
     13, // xmc
     28, // pb
     30, // vt
     32, // wsl
     22, // nlab
      8, // lh
      9, // lw
     12, // ma
     18, // wnum
     14, // colors
     17, // pairs
     21, // ncv
      2, // bufsz
      6, // spinv
      5, // spinh
     15, // maddr
     16, // mjump
     19, // mcs
     20, // mls
     23, // npins
     24, // orc
     25, // orl
     26, // orhi
     27, // orvi
     29, // cps
     31, // widcs
      3, // btns
      0, // bitwin
      1, // bitype
     -1, // OTug
     -1, // OTdC
     -1, // OTdN
     -1, // OTdB
     -1, // OTdT
     -1, // OTkn
};

static const short nbc_strs2nc[] = {
      2, // cbt
      3, // bel
      7, // cr
     12, // csr
     15, // tbc
     17, // clear
     19, // el
     20, // ed
     23, // hpa
     24, // cmdch
     26, // cup
     27, // cud1
     28, // home
     29, // civis
     30, // cub1
     31, // mrcup
     32, // cnorm
     33, // cuf1
     34, // ll
     35, // cuu1
     36, // cvvis
     39, // dch1
     40, // dl1
     43, // dsl
     46, // hd
     49, // smacs
     51, // blink
     52, // bold
     53, // smcup
     54, // smdc
     55, // dim
     59, // smir
     72, // invis
     68, // prot
     69, // rev
     74, // smso
     78, // smul
     82, // ech
     83, // rmacs
     85, // sgr0
     86, // rmcup
     87, // rmdc
     89, // rmir
     96, // rmso
     99, // rmul
    104, // flash
    105, // ff
    106, // fsl
    110, // is1
    111, // is2
    112, // is3
    113, // if
    117, // ich1
    118, // il1
    119, // ip
    123, // kbs
    129, // ktbc
    130, // kclr
    135, // kctab
    136, // kdch1
    137, // kdl1
    138, // kcud1
    139, // krmir
    142, // kel
    143, // ked
    145, // kf0
    146, // kf1
    155, // kf10
    147, // kf2
    148, // kf3
    149, // kf4
    150, // kf5
    151, // kf6
    152, // kf7
    153, // kf8
    154, // kf9
    211, // khome
    212, // kich1
    213, // kil1
    214, // kcub1
    215, // kll
    221, // knp
    224, // kpp
    233, // kcuf1
    246, // kind
    258, // kri
    265, // khts
    269, // kcuu1
    270, // rmkx
    271, // smkx
    272, // lf0
    273, // lf1
    282, // lf10
    274, // lf2
    275, // lf3
    276, // lf4
    277, // lf5
    278, // lf6
    279, // lf7
    280, // lf8
    281, // lf9
    286, // rmm
    287, // smm
    295, // nel
    299, // pad
    300, // dch
    301, // dl
    302, // cud
    304, // ich
    305, // indn
    306, // il
    307, // cub
    309, // cuf
    311, // rin
    312, // cuu
    315, // pfkey
    316, // pfloc
    318, // pfx
    320, // mc0
    322, // mc4
    323, // mc5
    327, // rep
    330, // rs1
    331, // rs2
    332, // rs3
    333, // rf
    334, // rc
    335, // vpa
    336, // sc
    338, // ind
    339, // ri
    348, // sgr
    363, // hts
    367, // wind
    374, // ht
    376, // tsl
    388, // uc
    389, // hu
    114, // iprog
    120, // ka1
    121, // ka3
    122, // kb2
    126, // kc1
    127, // kc3
    321, // mc5p
     13, // rmp
      0, // acsc
    319, // pln
    125, // kcbt
     81, // smxon
    101, // rmxon
     50, // smam
     84, // rmam
    392, // xonc
    391, // xoffc
     47, // enacs
    285, // smln
    284, // rmln
    124, // kbeg
    128, // kcan
    131, // kclo
    132, // kcmd
    133, // kcpy
    134, // kcrt
    140, // kend
    141, // kent
    144, // kext
    209, // kfnd
    210, // khlp
    216, // kmrk
    217, // kmsg
    219, // kmov
    220, // knxt
    222, // kopn
    223, // kopt
    225, // kprv
    226, // kprt
    227, // krdo
    228, // kref
    229, // krfr
    230, // krpl
    231, // krst
    232, // kres
    234, // ksav
    267, // kspd
    268, // kund
    235, // kBEG
    236, // kCAN
    237, // kCMD
    238, // kCPY
    239, // kCRT
    240, // kDC
    241, // kDL
    242, // kslt
    243, // kEND
    244, // kEOL
    245, // kEXT
    247, // kFND
    248, // kHLP
    249, // kHOM
    250, // kIC
    251, // kLFT
    252, // kMSG
    253, // kMOV
    254, // kNXT
    255, // kOPT
    256, // kPRV
    257, // kPRT
    259, // kRDO
    260, // kRPL
    261, // kRIT
    262, // kRES
    263, // kSAV
    264, // kSPD
    266, // kUND
    328, // rfi
    156, // kf11
    157, // kf12
    158, // kf13
    159, // kf14
    160, // kf15
    161, // kf16
    162, // kf17
    163, // kf18
    164, // kf19
    165, // kf20
    166, // kf21
    167, // kf22
    168, // kf23
    169, // kf24
    170, // kf25
    171, // kf26
    172, // kf27
    173, // kf28
    174, // kf29
    175, // kf30
    176, // kf31
    177, // kf32
    178, // kf33
    179, // kf34
    180, // kf35
    181, // kf36
    182, // kf37
    183, // kf38
    184, // kf39
    185, // kf40
    186, // kf41
    187, // kf42
    188, // kf43
    189, // kf44
    190, // kf45
    191, // kf46
    192, // kf47
    193, // kf48
    194, // kf49
    195, // kf50
    196, // kf51
    197, // kf52
    198, // kf53
    199, // kf54
    200, // kf55
    201, // kf56
    202, // kf57
    203, // kf58
    204, // kf59
    205, // kf60
    206, // kf61
    207, // kf62
    208, // kf63
     18, // el1
     16, // mgc
    356, // smgl
    361, // smgr
    283, // fln
    352, // sclk
     44, // dclk
    326, // rmclk
     25, // cwin
    108, // wingo
    109, // hup
     42, // dial
    325, // qdial
    377, // tone
    324, // pulse
    103, // hook
    102, // pause
    390, // wait
    378, // u0
    379, // u1
    380, // u2
    381, // u3
    382, // u4
    383, // u5
    384, // u6
    385, // u7
    386, // u8
    387, // u9
    298, // op
    297, // oc
    115, // initc
    116, // initp
    354, // scp
    355, // setf
    349, // setb
      8, // cpi
      9, // lpi
     10, // chr
     11, // cvr
     38, // defc
     56, // swidm
     57, // sdrfq
     60, // sitm
     62, // slm
     64, // smicm
     65, // snlq
     66, // snrmq
     73, // sshm
     75, // ssubm
     76, // ssupm
     79, // sum
     88, // rwidm
     90, // ritm
     91, // rlm
     92, // rmicm
     95, // rshm
     97, // rsubm
     98, // rsupm
    100, // rum
    288, // mhpa
    289, // mcud1
    290, // mcub1
    291, // mcuf1
    292, // mvpa
    293, // mcuu1
    296, // porder
    303, // mcud
    308, // mcub
    310, // mcuf
    313, // mcuu
    340, // scs
    350, // smgb
    351, // smgbp
    357, // smglp
    362, // smgrp
    365, // smgt
    366, // smgtp
    368, // sbim
    369, // scsd
    370, // rbim
    371, // rcsd
    372, // subcs
    373, // supcs
    375, // docr
    393, // zerom
     14, // csnm
    218, // kmous
    294, // minfo
    329, // reqmp
    107, // getm
    347, // setaf
    346, // setab
    317, // pfxl
     41, // devt
     21, // csin
    341, // s0ds
    342, // s1ds
    343, // s2ds
    344, // s3ds
    358, // smglr
    364, // smgtb
      6, // birep
      5, // binel
      4, // bicr
     22, // colornm
     37, // defbi
     48, // endbi
    353, // setcolor
    359, // slines
     45, // dispc
     67, // smpch
     93, // rmpch
     71, // smsc
     94, // rmsc
    314, // pctrm
    337, // scesc
      1, // scesa
     58, // ehhlm
     61, // elhlm
     63, // elohlm
     70, // erhlm
     77, // ethlm
     80, // evhlm
    345, // sgr1
    360, // slength
     -1, // OTi2
     -1, // OTrs
     -1, // OTnl
     -1, // OTbc
     -1, // OTko
     -1, // OTma
     -1, // OTG2
     -1, // OTG3
     -1, // OTG1
     -1, // OTG4
     -1, // OTGR
     -1, // OTGL
     -1, // OTGU
     -1, // OTGD
     -1, // OTGH
     -1, // OTGV
     -1, // OTGC
     -1, // meml
     -1, // memu
     -1, // box1
};

static struct {
    enum unibi_boolean index;
    const char * name;
}  nbc_bools2ncext[] = {
    { unibi_backspaces_with_bs, "OTbs" },
    { unibi_crt_no_scrolling, "OTns" },
    { unibi_no_correctly_working_cr, "OTnc" },
    { unibi_gnu_has_meta_key, "OTMT" },
    { unibi_linefeed_is_newline, "OTNL" },
    { unibi_has_hardware_tabs, "OTpt" },
    { unibi_return_does_clr_eol, "OTxr" },
};

static struct {
    enum unibi_numeric index;
    const char * name;
}  nbc_nums2ncext[] = {
    { unibi_magic_cookie_glitch_ul, "OTug" },
    { unibi_carriage_return_delay, "OTdC" },
    { unibi_new_line_delay, "OTdN" },
    { unibi_backspace_delay, "OTdB" },
    { unibi_horizontal_tab_delay, "OTdT" },
    { unibi_number_of_function_keys, "OTkn" },
};

static struct {
    enum unibi_string index;
    const char * name;
}  nbc_strs2ncext[] = {
    { unibi_termcap_init2, "OTi2" },
    { unibi_termcap_reset, "OTrs" },
    { unibi_linefeed_if_not_lf, "OTnl" },
    { unibi_backspace_if_not_bs, "OTbc" },
    { unibi_other_non_function_keys, "OTko" },
    { unibi_arrow_key_map, "OTma" },
    { unibi_acs_ulcorner, "OTG2" },
    { unibi_acs_llcorner, "OTG3" },
    { unibi_acs_urcorner, "OTG1" },
    { unibi_acs_lrcorner, "OTG4" },
    { unibi_acs_ltee, "OTGR" },
    { unibi_acs_rtee, "OTGL" },
    { unibi_acs_btee, "OTGU" },
    { unibi_acs_ttee, "OTGD" },
    { unibi_acs_hline, "OTGH" },
    { unibi_acs_vline, "OTGV" },
    { unibi_acs_plus, "OTGC" },
    { unibi_memory_lock, "meml" },
    { unibi_memory_unlock, "memu" },
    { unibi_box_chars_1, "box1" },
};

#endif  /* GUARD_UNINETBSD_CURSES_H_ */
